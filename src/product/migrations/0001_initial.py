# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2019-05-14 08:02
from __future__ import unicode_literals

from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('category', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyticProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='LikeProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LikeProductComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('product_description', models.TextField(blank=True, null=True)),
                ('sku_id', models.CharField(blank=True, max_length=50, null=True)),
                ('url', models.URLField(blank=True, null=True)),
                ('image_links', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('video_links', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('color_and_sizes', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('sailing_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('price_history', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('original_price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('discount_until', models.DateTimeField(blank=True, null=True)),
                ('discount_promotion', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('gifts', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('review_count', models.IntegerField(blank=True, null=True)),
                ('review_score', models.DecimalField(blank=True, decimal_places=2, max_digits=3, null=True)),
                ('item_properties', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('stock_status', models.NullBooleanField()),
                ('seller_en', models.CharField(blank=True, max_length=20, null=True)),
                ('seller_ch', models.CharField(blank=True, max_length=20, null=True)),
                ('keywords', models.CharField(blank=True, max_length=255, null=True)),
                ('brand', models.CharField(blank=True, max_length=255, null=True)),
                ('category', django.contrib.postgres.fields.jsonb.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('updated_idx', models.IntegerField(blank=True, default=0, null=True)),
                ('analysis', models.ManyToManyField(related_name='analysis_products', through='product.AnalyticProduct', to=settings.AUTH_USER_MODEL)),
                ('cat1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.FirstCategory')),
                ('cat2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.SecondCategory')),
                ('cat3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='category.ThirdCategory')),
                ('likes', models.ManyToManyField(related_name='like_products', through='product.LikeProduct', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ProductComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(default='')),
                ('is_edited', models.NullBooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('likes', models.ManyToManyField(related_name='pc_likes', through='product.LikeProductComment', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_comments', to='product.Product')),
            ],
            options={
                'ordering': ('created_at',),
            },
        ),
        migrations.CreateModel(
            name='UnLikeProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UnLikeProductComment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.ProductComment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='productcomment',
            name='unlikes',
            field=models.ManyToManyField(related_name='pc_unlikes', through='product.UnLikeProductComment', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='productcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='product',
            name='unlikes',
            field=models.ManyToManyField(related_name='unlike_products', through='product.UnLikeProduct', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='likeproductcomment',
            name='comment',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.ProductComment'),
        ),
        migrations.AddField(
            model_name='likeproductcomment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='likeproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product'),
        ),
        migrations.AddField(
            model_name='likeproduct',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='analyticproduct',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.Product'),
        ),
        migrations.AddField(
            model_name='analyticproduct',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='unlikeproduct',
            unique_together=set([('user', 'product')]),
        ),
        migrations.AlterUniqueTogether(
            name='likeproductcomment',
            unique_together=set([('user', 'comment')]),
        ),
        migrations.AlterUniqueTogether(
            name='likeproduct',
            unique_together=set([('user', 'product')]),
        ),
        migrations.AlterUniqueTogether(
            name='analyticproduct',
            unique_together=set([('user', 'product')]),
        ),
    ]
